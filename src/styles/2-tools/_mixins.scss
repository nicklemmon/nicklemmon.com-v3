//== Sass Mixins ==//

//== PseudoShadow
@mixin pseudoShadow() { // Pseudo element shadow that is < the width of the parent element, determined by percentage
  position: relative;

  &:after {
    content: '';
    display: block;
    position: absolute;
    z-index: $layer--low;
    bottom: 0;
    left: 20%;
    height: 5px;
    width: 60%;
    background: rgba(0, 0, 0, 0);
    box-shadow: $boxShadow;
  }
}

//== Size Mixin
@mixin size($val) {
  height: $val;
  width: $val;
}

//== Fluid Type Mixin from https://codepen.io/MadeByMike/pen/vNrvdZ
@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
	& {
		@each $property in $properties {
			#{$property}: $min-value;
		}

		@media screen and (min-width: $min-vw) {
			@each $property in $properties {
				#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}
		}

		@media screen and (min-width: $max-vw) {
			@each $property in $properties {
				#{$property}: $max-value;
			}
		}
	}
}

//== Needed for fluid-type mixin also from https://codepen.io/MadeByMike/pen/vNrvdZ
@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}
